show databases;
-- For creating a Database we wil use following querry
-- Syntax:
-- create database database_name;
-- Example
create database feujitraining;


-- After creating a database we have to open the data base in other words we have to use the database. To do that we will use the following syntax.
-- Syntax:
-- use database_name;
-- Example:
use feujitraining;


-- For creating a table we will use the following querry:
-- Syntax:
-- create table table_name(column_name_1 datatype,column_name_2 datatype,...,column_name_n datatype );
create table trainee(EmpNum numeric not null primary key, fullname varchar (30) not null, area_of_interest varchar (20) not null, emailid varchar (30) not null unique, phoneno numeric (10) not null unique, work_location character not null, field character not null);

-- To see the description of the table
-- Syntax:
-- desc table_name;
desc trainee;

-- To view Table name:
-- Syntax:
-- show table_name;
-- Example:
show tables;

-- ALTER TABLE trainee MODIFY work_location varchar(30) NOT NULL;
-- ALTER TABLE trainee MODIFY field varchar(30) NOT NULL;

-- Insert Into Tables
-- Syntax:
-- Insert into table_name (column_1, column_2, ..., column_n) values (data_for_column_1, data_for_column_2, ..., data_for_column_n)
-- Insert into table_name values (data_for_column_1, data_for_column_2, ..., data_for_column_n)
insert into trainee (EmpNum ,fullname ,area_of_interest ,emailid ,phoneno ,work_location ,field ) values (101, "Kunal Singh", "Cyber Security", "kunal.s@example.com", 9998887770, "Hyderabad", "React");
insert into trainee values(102, "Rajesh Singh", "Software Developer", "reajesh.s@example.com", 8889997770, "Bangalore", "Appain");
insert into trainee values(103, "Ravi V", "Automation Engineer", "ravi.v@example.com", 6662227770, "Bangalore", "Quality Engineering");
insert into trainee values(104, "Sai Ram", "Automation Engineer", "sai.r@example.com", 4445557770, "Hyderabad", "Quality Engineering");
insert into trainee values(105, "Vivek Y", "Software Developer", "vivek.y@example.com", 1115557770, "Hyderabad", "Appain");
insert into trainee values(106, "Shiva O", "Cyber Security", "shiva.o@example.com", 2225557770, "Bangalore", "React");
insert into trainee values(107, "Rock W", "DBMS", "rock.w@example.com", 2229999970, "Bangalore", "Data Scientise");
insert into trainee values(108, "Raju S", "SQL", "raju.s@example.com", 1165757770, "Hyderabad", "Research");
insert into trainee values(109, "Tomy C", "Startup", "tomy.c@example.com", 1235557770, "Bangalore", "Marketing");
insert into trainee values(110, "Chandu C", "Acting", "chandu.c@example.com", 4565557770, "Hyderabad", "Sales");

-- To view the table we will be using:
-- Syntax:
-- select * from table_name;
-- Example:
select * from trainee;
-- _______________________________________________________________________________________
-- --------------------------------------------------------------------------------------
-- DDL Queries
-- --------------------------------------------------------------------------------------
-- DDL (Data Definition Language)
-- 1. Create
-- 2. Alter
-- 3. Drop
-- 4. Truncate
-- 5. Rename
-- 6. Comment
-- ______________________________________________________________________________________________
-- 1. Create
-- SYNTAX: create table tablename(attribute1 datatype......attributen datatype); 
-- ----------------------------------------------------------------------------------------------
create table programs(ProgramId numeric not null primary key, Program_Name varchar(20) not null, Contact_Person varchar(20) not null, Emp_Id numeric not null);
-- ______________________________________________________________________________________________
-- 2. Alter (  Alter is a reserve word which modifies the structure of the table.)
-- SYNTAX: alter table tablename add(new column1 datatype......new columnx datatype); 
-- ----------------------------------------------------------------------------------------------
alter table programs add(Type_of_Course varchar(20) not null);
-- ______________________________________________________________________________________________
-- 3. Rename ( A table name can be changed using the reserver ‘rename’ )
-- SYNTAX: rename old table name to new table name;
-- SYNTAX: alter table old table name rename to new table name; 
-- ----------------------------------------------------------------------------------------------
alter table programs rename to courses; 
-- ______________________________________________________________________________________________
-- 4. Drop ( It is used to delete the table including all the attributes.)
-- SYNTAX: drop table tablename; 
-- ----------------------------------------------------------------------------------------------
drop table programs;

